@use "./mixin" as m;
@use "./variable" as v;
@use "./functions" as f;

html {
	&:not([lang="ja"]) {
		word-break: break-word;
	}
	@include m.m(-md) {
		font-size: calc(100vw * #{f.conv(base-font-size)} / v.$sp-design-width);
	}
	@include m.m(md-lg) {
		font-size: calc(100vw * #{f.conv(base-font-size)} / v.$pc-max-width);
	}
}

body {
	min-width: 320px;
	padding-top: f.r(60);
	color: rgb(var(--black));
	background-color: white;
	font-family: "Noto Sans JP", sans-serif;
	font-weight: 400;
	font-size: f.r(16);
	font-feature-settings: "palt";
	line-height: 1.8;
	letter-spacing: 0.05em;
	-webkit-text-size-adjust: 100%;
	@include m.m {
		min-width: auto;
		padding-top: f.r(120);
		@media (hover: none) {
			-webkit-text-size-adjust: none;
		}
	}
}

// dialogが開いているときに背景固定
body:has(dialog[open]) {
	overflow: hidden;
}

// ダークモードに対応させるとき
// @media (prefers-color-scheme: dark) {
// 	body {
// 		color: white;
// 		background-color: rgb(var(--black));
// 	}
// }
